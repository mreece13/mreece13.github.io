---
title: "Research" 
format: 
  html: 
    page-layout: full
title-block-banner: false
keep-md: true
jupyter: python3
section-divs: false
toc-location: left
toc: true
echo: false
---

```{python}
import yaml
from IPython.display import display, Markdown, HTML

def readable_list(_s):
  if len(_s) < 3:
    return ' and '.join(map(str, _s))
  *a, b = _s
  return f"{', '.join(map(str, a))}, and {b}"

def button(url, str, icon):
    icon_base = icon[:2]
    return f"""<a class="btn btn-outline-dark btn-sm", href="{url}" target="_blank" rel="noopener noreferrer">
        <i class="{icon_base} {icon}" role='img' aria-label='{str}'></i>
        {str}
    </a>"""

yaml_data = yaml.safe_load(open("papers.yml"))
pub_strs = {"pubs": [], "wps": []}
for _, data in yaml_data.items():
    title_str = data["title"]
    authors = data.get("authors", ["me"])
    authors = [aut if aut != "me" else "<strong>Mason Reece</strong>" for aut in authors]
    author_str = readable_list(authors)
    year_str = data["year"]

    buttons = []
    preprint = data.get("preprint")
    if preprint is not None:
        buttons.append(button(preprint, "Most Recent Draft", "bi-file-earmark-pdf"))

    github = data.get("github")
    if github is not None:
        buttons.append(button(github, "Github", "bi-github"))
        
    dataverse = data.get("dataverse")
    if dataverse is not None:
        buttons.append(button(dataverse, "Dataverse", "bi-database"))

    pub_url = data.get("published_url")
    venue = data.get("venue")
    working_paper = pub_url is None
    
    pub_str = f'{author_str}. ({year_str}) "{title_str}."'

    if venue is not None:
        pub_str += f" <em>{venue}</em>"

    if working_paper:
         pub_strs["wps"].append(
            "<li class='list-group-item'>" + pub_str + "<br>" + " ".join(buttons) + "</li>"
        )
       
    else:
        buttons.append(button(pub_url, "Published", "ai-archive"))
        pub_strs["pubs"].append(
            "<li class='list-group-item'>" + pub_str + "<br>" + " ".join(buttons) + "</li>"
        )
```

## Published

```{python}
#| label: "published-year"
#| id: "published-year"
#| output: asis

for p in pub_strs["pubs"]:
  display(HTML("<ul class='list-group list-group-flush'>" + '\n' + p + "</ul>"))

```

## Working Papers

```{python}
#| label: "not-published-year"
#| id: "not-published-year"
#| output: asis

for p in pub_strs["wps"]:
  display(HTML("<ul class='list-group list-group-flush'>" + '\n' + p + "</ul>"))

```